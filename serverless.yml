service: renapp-admin
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-2
  memorySize: 512
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "rds:*"
      Resource: "*"
custom:
  defaultStage: dev
  profiles:
    dev: renapp-admin
    prod: renapp-admin
functions:
  app:
    handler: dist/index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    vpc:
      securityGroupIds:
        - sg-07a4c1dcf87ef7398
      subnetIds:
        - subnet-bfea26f2
        - subnet-6adfa803
        - subnet-e1962a9a
Resources:
  GatewayResponseDefault4XX:
    Type: 'AWS::ApiGateway::GatewayResponse'
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: 'ApiGatewayRestApi'
  GatewayResponseDefault5XX:
    Type: 'AWS::ApiGateway::GatewayResponse'
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_5XX
      RestApiId:
        Ref: 'ApiGatewayRestApi'
package:
  exclude:
    - src/**
    - .env
  include:
    - dist/**
plugins:
  - serverless-offline
